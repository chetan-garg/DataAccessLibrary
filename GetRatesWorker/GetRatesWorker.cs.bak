using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using Unibet.DataEntities;
using Unibet.InterfaceLibrary;
using Utilities;

namespace GetRatesWorker
{
    public class GetRatesWorker : IGetRatesWorker
    {
        IDataHandler _dataHandler = null;
        IRatesConverter _converter = null;

        public GetRatesWorker(IDataHandler dataHandler, IRatesConverter converter)
        {
            _dataHandler = dataHandler;
            _converter = converter;
        }


        public void RefreshRatesFromApiAsync(string apiBaseUrl, string apiKey)
        {
            string apiUrl = Utilities.Utilities.GenerateUrlWithCurrencySymbols(apiBaseUrl, apiKey);
            if (!string.IsNullOrWhiteSpace(apiUrl))
            {
                var handler = new HttpClientHandler();
                handler.DefaultProxyCredentials = CredentialCache.DefaultCredentials;

                HttpClient client = new HttpClient(handler);

                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

                HttpResponseMessage response = null;//client.GetAsync(apiUrl).Result;

                if (true)//response.IsSuccessStatusCode)
                {
                    string output = "{\n  \"success\":true,\n  \"timestamp\":1571617453,\n  \"base\":\"EUR\",\n  \"date\":\"2019-10-21\",\n  \"rates\":{\n    \"AUD\":1.627986,\n    \"SEK\":10.780414,\n    \"USD\":1.115898,\n    \"GBP\":0.86448,\n    \"EUR\":1\n  }\n}";//response.Content.ReadAsStringAsync().Result;
                    Rootobject converter = Newtonsoft.Json.JsonConvert.DeserializeObject<Rootobject>(output);

                    var currencyRates = _converter.GetRatesFromJson(converter);
                    _dataHandler.AddExchangeRates(currencyRates);
                    
                }
                else
                {
                    throw new Exception(string.Format("{0}, {1}", response.StatusCode, response.StatusCode));
                }

            }
        }
    }
}
